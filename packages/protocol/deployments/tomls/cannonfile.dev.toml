name="sapience"
version="1.0.5"

[var.settings]
owner = "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266"
baseAssetMinPriceTick = "16000" # 5
baseAssetMaxPriceTick = "39000" # 50
feeRate = "10000" # 1%
startingSqrtPriceX96 = "345347553882095649185803010048" # 19
assertionLiveness = "21600"
bondAmount = "5000000000"
claimStatement = "<%= stringToHex('The sum of gas used divided by the sum of base fees paid on Ethereum Mainnet across all blocks, divided by the wstETH/ETH ratio at the end of the period, represented with 18 decimal places') %>"
minTradeSize = "10000"
depends=[]

[clone.UMA]
source="uma-oov3"
target="sapience@uma-mock"
options.defaultCurrency = "<%= BondCurrency.Token.address %>"
options.minimumBond = "0"

[clone.Uniswap]
source="uniswap:3.0.1"
target="sapience@uniswap"

[clone.CollateralAsset]
source="mintable-token@permissionless-mint"
target="sapience@test-collateral-asset"
var.symbol="wstETH"

[clone.BondCurrency]
source="mintable-token@permissionless-mint"
target="sapience@test-bond-currency"
var.symbol="USDC"
var.decimals = "6"

[deploy.ConfigurationModule]
artifact="ConfigurationModule"

[deploy.LiquidityModule]
artifact="LiquidityModule"

[deploy.TradeModule]
artifact="TradeModule"

[deploy.ViewsModule]
artifact="ViewsModule"

[deploy.SettlementModule]
artifact="SettlementModule"

[deploy.UMASettlementModule]
artifact="UMASettlementModule"

[deploy.NftModule]
artifact="NftModule"

[deploy.ERC165Module]
artifact="ERC165Module"

[router.Sapience]
contracts = [
  'ConfigurationModule',
  'LiquidityModule',
  'TradeModule',
  'ViewsModule',
  'SettlementModule',
  'UMASettlementModule',
  'NftModule',
  'ERC165Module'
]
highlight=true

[invoke.initializeMarketGroup]
target="Sapience"
func="initializeMarketGroup"
from="<%= settings.owner %>"
args=[
  "<%= settings.owner %>",
  "<%= CollateralAsset.Token.address %>",
  [],
  "<%= settings.minTradeSize %>",
  "false",
  { feeRate = "<%= settings.feeRate %>", assertionLiveness= "<%= settings.assertionLiveness %>", bondCurrency = "<%= imports.BondCurrency.contracts.Token.address %>", bondAmount= "<%= settings.bondAmount %>",  uniswapPositionManager =  "<%= imports.Uniswap.contracts.NonfungiblePositionManager.address %>", uniswapSwapRouter = "<%= imports.Uniswap.contracts.SwapRouter.address %>", uniswapQuoter = "<%= imports.Uniswap.contracts.QuoterV2.address %>", optimisticOracleV3 = "<%= imports.UMA.contracts.OptimisticOracleV3.address %>" }
]
depends=["router.Sapience", "clone.BondCurrency"]

[invoke.createFirstMarket]
target="Sapience"
from = "<%= settings.owner %>"
func="createMarket"
args=[
  "1735689600",
  "1738368000",
  "<%= settings.startingSqrtPriceX96 %>",
  "<%= settings.baseAssetMinPriceTick %>",
  "<%= settings.baseAssetMaxPriceTick %>",
  "1",
  "<%= settings.claimStatement %>",
  ""
]
depends=["invoke.initializeMarketGroup"]

[invoke.gimmeTokens]
target="CollateralAsset.Token"
func="mint"
args=["<%= parseEther('1000') %>", "<%= settings.owner %>"]
depends=["clone.CollateralAsset"]

[invoke.gimmeTokens2]
target="CollateralAsset.Token"
func="mint"
args=["<%= parseEther('1000') %>", "0x70997970C51812dc3A010C7d01b50e0d17dc79C8"]
depends=["clone.CollateralAsset"]

[invoke.gimmeTokens3]
target="CollateralAsset.Token"
func="mint"
args=["<%= parseEther('1000') %>", "0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC"]
depends=["clone.CollateralAsset"]