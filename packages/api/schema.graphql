# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type CandleAndTimestampType {
  data: [CandleType!]!
  lastUpdateTimestamp: Int!
}

type CandleType {
  close: String!
  high: String!
  low: String!
  open: String!
  timestamp: Int!
}

type CategoryType {
  id: ID!
  marketGroups: [MarketGroupType!]!
  name: String!
  slug: String!
}

input MarketFilterInput {
  endTimestamp_gt: String
}

type MarketGroupType {
  address: String
  baseTokenName: String
  category: CategoryType
  chainId: Int!
  claimStatement: String
  collateralAsset: String
  collateralDecimals: Int
  collateralSymbol: String
  deployTimestamp: Int
  deployTxnBlockNumber: Int
  factoryAddress: String
  id: ID!
  initializationNonce: String
  isCumulative: Boolean!
  isYin: Boolean!
  marketParams: MarketParamsType
  markets(filter: MarketFilterInput, orderBy: MarketOrderInput): [MarketType!]!
  minTradeSize: String
  owner: String
  question: String
  quoteTokenName: String
  resource: ResourceType
  vaultAddress: String
}

input MarketOrderInput {
  direction: String!
  field: String!
}

type MarketParamsType {
  assertionLiveness: String
  bondAmount: String
  bondCurrency: String
  claimStatement: String
  feeRate: Int
  optimisticOracleV3: String
  uniswapPositionManager: String
  uniswapQuoter: String
  uniswapSwapRouter: String
}

type MarketType {
  baseAssetMaxPriceTick: Int
  baseAssetMinPriceTick: Int
  currentPrice: String
  endTimestamp: Int
  id: ID!
  marketGroup: MarketGroupType
  marketId: Int!
  marketParams: MarketParamsType
  optionName: String
  poolAddress: String
  positions: [PositionType!]!
  public: Boolean!
  question: String
  rules: String
  settled: Boolean
  settlementPriceD18: String
  startTimestamp: Int
  startingSqrtPriceX96: String
}

type PnLType {
  marketId: Int!
  openPositionsPnL: String!
  owner: String!
  positionCount: Int!
  positions: [Int!]!
  totalDeposits: String!
  totalPnL: String!
  totalWithdrawals: String!
}

type PositionType {
  baseToken: String!
  borrowedBaseToken: String
  borrowedQuoteToken: String
  collateral: String!
  highPriceTick: String
  id: ID!
  isLP: Boolean!
  isSettled: Boolean
  lowPriceTick: String
  lpBaseToken: String
  lpQuoteToken: String
  market: MarketType!
  owner: String!
  positionId: Int!
  quoteToken: String!
  transactions: [TransactionType!]!
}

type Query {
  categories: [CategoryType!]!
  getMarketLeaderboard(address: String!, chainId: Int!, marketId: String!): [PnLType!]!
  indexCandles(address: String!, chainId: Int!, from: Int!, interval: Int!, marketId: String!, to: Int!): CandleAndTimestampType!
  indexPriceAtTime(address: String!, chainId: Int!, marketId: String!, timestamp: Int!): CandleType
  legacyMarketCandles(address: String!, chainId: Int!, from: Int!, interval: Int!, marketId: String!, to: Int!): [CandleType!]!
  marketCandles(address: String!, chainId: Int!, from: Int!, interval: Int!, marketId: String!, to: Int!): CandleAndTimestampType!
  marketGroup(address: String!, chainId: Int!): MarketGroupType
  marketGroups(baseTokenName: String, chainId: Int, collateralAsset: String): [MarketGroupType!]!
  marketGroupsByCategory(slug: String!): [MarketGroupType!]!
  markets(chainId: Int!, marketAddress: String!, marketId: Int!): [MarketType!]!
  positions(chainId: Int, marketAddress: String, owner: String): [PositionType!]!
  resource(slug: String!): ResourceType
  resourceCandles(from: Int!, interval: Int!, slug: String!, to: Int!): CandleAndTimestampType!
  resourcePrices: [ResourcePriceType!]!
  resourceTrailingAverageCandles(from: Int!, interval: Int!, slug: String!, to: Int!, trailingAvgTime: Int!): CandleAndTimestampType!
  resources(categorySlug: String): [ResourceType!]!
  totalVolumeByMarket(chainId: Int!, marketAddress: String!, marketId: Int!): Float!
  transactions(positionId: Int): [TransactionType!]!
}

type ResourcePriceType {
  blockNumber: Int!
  id: ID!
  resource: ResourceType
  timestamp: Int!
  value: String!
}

type ResourceType {
  category: CategoryType
  id: ID!
  marketGroups: [MarketGroupType!]!
  name: String!
  resourcePrices: [ResourcePriceType!]!
  slug: String!
}

type TransactionType {
  baseToken: String
  baseTokenDelta: String
  collateral: String
  collateralDelta: String
  id: ID!
  lpBaseDeltaToken: String
  lpQuoteDeltaToken: String
  position: PositionType
  quoteToken: String
  quoteTokenDelta: String
  timestamp: Int!
  tradeRatioD18: String
  transactionHash: String
  type: String!
}